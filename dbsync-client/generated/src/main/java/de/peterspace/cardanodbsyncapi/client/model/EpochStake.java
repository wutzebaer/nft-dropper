/*
 * Cardano DB-Sync API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.peterspace.cardanodbsyncapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * EpochStake
 */
@JsonPropertyOrder({
  EpochStake.JSON_PROPERTY_STAKE_ADDRESS,
  EpochStake.JSON_PROPERTY_AMOUNT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-23T22:01:50.053590+02:00[Europe/Berlin]")
public class EpochStake {
  public static final String JSON_PROPERTY_STAKE_ADDRESS = "stakeAddress";
  private String stakeAddress;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Long amount;

  public EpochStake() {
  }

  public EpochStake stakeAddress(String stakeAddress) {
    
    this.stakeAddress = stakeAddress;
    return this;
  }

   /**
   * Get stakeAddress
   * @return stakeAddress
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STAKE_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStakeAddress() {
    return stakeAddress;
  }


  @JsonProperty(JSON_PROPERTY_STAKE_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStakeAddress(String stakeAddress) {
    this.stakeAddress = stakeAddress;
  }


  public EpochStake amount(Long amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(Long amount) {
    this.amount = amount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EpochStake epochStake = (EpochStake) o;
    return Objects.equals(this.stakeAddress, epochStake.stakeAddress) &&
        Objects.equals(this.amount, epochStake.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stakeAddress, amount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EpochStake {\n");
    sb.append("    stakeAddress: ").append(toIndentedString(stakeAddress)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

