/*
 * Cardano DB-Sync API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.peterspace.cardanodbsyncapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TokenDetails
 */
@JsonPropertyOrder({
  TokenDetails.JSON_PROPERTY_SLOT_NO,
  TokenDetails.JSON_PROPERTY_MA_POLICY_ID,
  TokenDetails.JSON_PROPERTY_MA_NAME,
  TokenDetails.JSON_PROPERTY_FINGERPRINT,
  TokenDetails.JSON_PROPERTY_METADATA,
  TokenDetails.JSON_PROPERTY_MA_POLICY_SCRIPT,
  TokenDetails.JSON_PROPERTY_TX_HASH,
  TokenDetails.JSON_PROPERTY_TOTAL_SUPPLY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-25T16:31:10.010729500+02:00[Europe/Berlin]")
public class TokenDetails {
  public static final String JSON_PROPERTY_SLOT_NO = "slotNo";
  private Long slotNo;

  public static final String JSON_PROPERTY_MA_POLICY_ID = "maPolicyId";
  private String maPolicyId;

  public static final String JSON_PROPERTY_MA_NAME = "maName";
  private String maName;

  public static final String JSON_PROPERTY_FINGERPRINT = "fingerprint";
  private String fingerprint;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private String metadata;

  public static final String JSON_PROPERTY_MA_POLICY_SCRIPT = "maPolicyScript";
  private String maPolicyScript;

  public static final String JSON_PROPERTY_TX_HASH = "txHash";
  private String txHash;

  public static final String JSON_PROPERTY_TOTAL_SUPPLY = "totalSupply";
  private Long totalSupply;

  public TokenDetails() {
  }

  public TokenDetails slotNo(Long slotNo) {
    
    this.slotNo = slotNo;
    return this;
  }

   /**
   * Get slotNo
   * @return slotNo
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SLOT_NO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getSlotNo() {
    return slotNo;
  }


  @JsonProperty(JSON_PROPERTY_SLOT_NO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSlotNo(Long slotNo) {
    this.slotNo = slotNo;
  }


  public TokenDetails maPolicyId(String maPolicyId) {
    
    this.maPolicyId = maPolicyId;
    return this;
  }

   /**
   * Get maPolicyId
   * @return maPolicyId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MA_POLICY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMaPolicyId() {
    return maPolicyId;
  }


  @JsonProperty(JSON_PROPERTY_MA_POLICY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaPolicyId(String maPolicyId) {
    this.maPolicyId = maPolicyId;
  }


  public TokenDetails maName(String maName) {
    
    this.maName = maName;
    return this;
  }

   /**
   * Get maName
   * @return maName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MA_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMaName() {
    return maName;
  }


  @JsonProperty(JSON_PROPERTY_MA_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaName(String maName) {
    this.maName = maName;
  }


  public TokenDetails fingerprint(String fingerprint) {
    
    this.fingerprint = fingerprint;
    return this;
  }

   /**
   * Get fingerprint
   * @return fingerprint
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FINGERPRINT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFingerprint() {
    return fingerprint;
  }


  @JsonProperty(JSON_PROPERTY_FINGERPRINT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFingerprint(String fingerprint) {
    this.fingerprint = fingerprint;
  }


  public TokenDetails metadata(String metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public TokenDetails maPolicyScript(String maPolicyScript) {
    
    this.maPolicyScript = maPolicyScript;
    return this;
  }

   /**
   * Get maPolicyScript
   * @return maPolicyScript
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MA_POLICY_SCRIPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMaPolicyScript() {
    return maPolicyScript;
  }


  @JsonProperty(JSON_PROPERTY_MA_POLICY_SCRIPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaPolicyScript(String maPolicyScript) {
    this.maPolicyScript = maPolicyScript;
  }


  public TokenDetails txHash(String txHash) {
    
    this.txHash = txHash;
    return this;
  }

   /**
   * Get txHash
   * @return txHash
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TX_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTxHash() {
    return txHash;
  }


  @JsonProperty(JSON_PROPERTY_TX_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTxHash(String txHash) {
    this.txHash = txHash;
  }


  public TokenDetails totalSupply(Long totalSupply) {
    
    this.totalSupply = totalSupply;
    return this;
  }

   /**
   * Get totalSupply
   * @return totalSupply
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_SUPPLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTotalSupply() {
    return totalSupply;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_SUPPLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalSupply(Long totalSupply) {
    this.totalSupply = totalSupply;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenDetails tokenDetails = (TokenDetails) o;
    return Objects.equals(this.slotNo, tokenDetails.slotNo) &&
        Objects.equals(this.maPolicyId, tokenDetails.maPolicyId) &&
        Objects.equals(this.maName, tokenDetails.maName) &&
        Objects.equals(this.fingerprint, tokenDetails.fingerprint) &&
        Objects.equals(this.metadata, tokenDetails.metadata) &&
        Objects.equals(this.maPolicyScript, tokenDetails.maPolicyScript) &&
        Objects.equals(this.txHash, tokenDetails.txHash) &&
        Objects.equals(this.totalSupply, tokenDetails.totalSupply);
  }

  @Override
  public int hashCode() {
    return Objects.hash(slotNo, maPolicyId, maName, fingerprint, metadata, maPolicyScript, txHash, totalSupply);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenDetails {\n");
    sb.append("    slotNo: ").append(toIndentedString(slotNo)).append("\n");
    sb.append("    maPolicyId: ").append(toIndentedString(maPolicyId)).append("\n");
    sb.append("    maName: ").append(toIndentedString(maName)).append("\n");
    sb.append("    fingerprint: ").append(toIndentedString(fingerprint)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    maPolicyScript: ").append(toIndentedString(maPolicyScript)).append("\n");
    sb.append("    txHash: ").append(toIndentedString(txHash)).append("\n");
    sb.append("    totalSupply: ").append(toIndentedString(totalSupply)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

