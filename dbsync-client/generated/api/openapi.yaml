openapi: 3.0.1
info:
  title: Cardano DB-Sync API
  version: "1.0"
servers:
- description: Default Server URL
  url: http://localhost:8080/
paths:
  /cardanoDbSyncApi/lastMint:
    post:
      operationId: getLastMint
      requestBody:
        content:
          application/json:
            example:
              stakeAddress: stake1u8wmu7jc0e4a6fn5haflczfjy6aagwhsxh6w5p7hsyt8jeshhy0rn
              policyIds:
              - 38e97ac082af9312c69c9e2b0949c0d7873f0bbca34b0a8905ec2441
            schema:
              $ref: '#/components/schemas/GetLastMintRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TokenDetails'
                type: array
          description: OK
      summary: Get last minted tokens for stakeAddress and policy ids
      tags:
      - rest-handler
      x-content-type: application/json
      x-accepts: application/json
  /cardanoDbSyncApi/{stakeAddress}/stakeInfo:
    get:
      operationId: getStakeInfo
      parameters:
      - example: stake1u8wmu7jc0e4a6fn5haflczfjy6aagwhsxh6w5p7hsyt8jeshhy0rn
        explode: false
        in: path
        name: stakeAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakeInfo'
          description: OK
      summary: Get infos where address is staked to
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/{stakeAddress}/returnAddress:
    get:
      operationId: getReturnAddress
      parameters:
      - example: stake1u8wmu7jc0e4a6fn5haflczfjy6aagwhsxh6w5p7hsyt8jeshhy0rn
        explode: false
        in: path
        name: stakeAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnAddress'
          description: OK
      summary: "Find the first known address with the same stake address, which should\
        \ not be mangled"
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/{stakeAddress}/handles:
    get:
      operationId: getHandles
      parameters:
      - example: stake1u8wmu7jc0e4a6fn5haflczfjy6aagwhsxh6w5p7hsyt8jeshhy0rn
        explode: false
        in: path
        name: stakeAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StakeAddress'
                type: array
          description: OK
      summary: Get all handles from a stakeAddress
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/{address}/utxos:
    get:
      operationId: getUtxos
      parameters:
      - example: stake1u8wmu7jc0e4a6fn5haflczfjy6aagwhsxh6w5p7hsyt8jeshhy0rn
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Utxo'
                type: array
          description: OK
      summary: Find utxos of given address or stakeAddress including multi assets
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/{address}/token:
    get:
      operationId: getAddressTokenList
      parameters:
      - example: stake1u8wmu7jc0e4a6fn5haflczfjy6aagwhsxh6w5p7hsyt8jeshhy0rn
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TokenListItem'
                type: array
          description: OK
      summary: getAddressTokenList
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/{address}/statement:
    get:
      operationId: getStatement
      parameters:
      - example: stake1u8wmu7jc0e4a6fn5haflczfjy6aagwhsxh6w5p7hsyt8jeshhy0rn
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountStatementRow'
                type: array
          description: OK
      summary: Get all transactions for an address or stakeAddress
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/{address}/stakeAddress:
    get:
      operationId: getStakeAddress
      parameters:
      - example: addr1qx8lsj4menq5s7w5f8jupm64n9d3aamvcppllujwse473636fhhttcg3x8kfhm6qqpvujfhgmu8jww3mfn49m3fkjssqhx0348
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakeAddress'
          description: OK
      summary: Find stakeAddress of address
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/transaction/{txId}/confirmed:
    get:
      operationId: isTransactionConfirmed
      parameters:
      - example: a6ca444bd39cb51c7e997a9cead4a8071e2f7e5d1579ac4194b6aaaba923bc58
        explode: false
        in: path
        name: txId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
      summary: Checks is a txid has been included in the chain
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/token:
    get:
      operationId: getTokenList
      parameters:
      - explode: true
        in: query
        name: afterMintid
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: beforeMintid
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - example: 89267e9a35153a419e1b8ffa23e511ac39ea4e3b00452e9d500f2982
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TokenListItem'
                type: array
          description: OK
      summary: getTokenList
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/token/{policyId}/{assetName}:
    get:
      operationId: getTokenDetails
      parameters:
      - example: 89267e9a35153a419e1b8ffa23e511ac39ea4e3b00452e9d500f2982
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - example: 436176616c6965724b696e67436861726c6573
        explode: false
        in: path
        name: assetName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDetails'
          description: OK
      summary: getTokenDetails
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/tip:
    get:
      operationId: getTip
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int64
                type: integer
          description: OK
      summary: Returns current tip of db
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/stakeHash/{stakeAddress}:
    get:
      operationId: getStakeHashByAddress
      parameters:
      - example: stake1u8wmu7jc0e4a6fn5haflczfjy6aagwhsxh6w5p7hsyt8jeshhy0rn
        explode: false
        in: path
        name: stakeAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakeAddress'
          description: OK
      summary: Find stakeAddressHash by stakeAddress
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/stakeAddress/{stakeAddressHash}:
    get:
      operationId: getStakeAddressByHash
      parameters:
      - example: e1ddbe7a587e6bdd2674bf53fc093226bbd43af035f4ea07d781167966
        explode: false
        in: path
        name: stakeAddressHash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakeAddress'
          description: OK
      summary: Find stakeAddress by stakeAddressHash
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/poolList:
    get:
      operationId: getPoolList
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PoolInfo'
                type: array
          description: OK
      summary: getPoolList
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/policy/{policyId}/owners:
    get:
      operationId: getOwners
      parameters:
      - example: 89267e9a35153a419e1b8ffa23e511ac39ea4e3b00452e9d500f2982
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OwnerInfo'
                type: array
          description: OK
      summary: "Get all token owners of a policyId, values get updated twice a day"
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/minswap/{policyId}/{assetName}:
    get:
      operationId: getMinswapPools
      parameters:
      - example: 89267e9a35153a419e1b8ffa23e511ac39ea4e3b00452e9d500f2982
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - example: 436176616c6965724b696e67436861726c6573
        explode: false
        in: path
        name: assetName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LiquidityPool'
                type: array
          description: OK
      summary: Get minswap pools for token
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/handles/{handle}:
    get:
      operationId: getAddressByHandle
      parameters:
      - example: petergrossmann
        explode: false
        in: path
        name: handle
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakeAddress'
          description: OK
      summary: Get address for handle
      tags:
      - rest-handler
      x-accepts: application/json
  /cardanoDbSyncApi/epochStake/{poolHash}/{epoch}:
    get:
      operationId: getEpochStake
      parameters:
      - example: pool180fejev4xgwe2y53ky0pxvgxr3wcvkweu6feq5mdljfzcsmtg6u
        explode: false
        in: path
        name: poolHash
        required: true
        schema:
          type: string
        style: simple
      - example: 432
        explode: false
        in: path
        name: epoch
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EpochStake'
                type: array
          description: OK
      summary: getEpochStake
      tags:
      - rest-handler
      x-accepts: application/json
components:
  schemas:
    GetLastMintRequest:
      example:
        stakeAddress: stakeAddress
        policyIds:
        - policyIds
        - policyIds
      properties:
        stakeAddress:
          type: string
        policyIds:
          items:
            type: string
          type: array
      type: object
    TokenDetails:
      example:
        metadata: metadata
        maName: maName
        totalSupply: 6
        maPolicyId: maPolicyId
        fingerprint: fingerprint
        slotNo: 0
        txHash: txHash
        maPolicyScript: maPolicyScript
      properties:
        slotNo:
          format: int64
          type: integer
        maPolicyId:
          type: string
        maName:
          type: string
        fingerprint:
          type: string
        metadata:
          type: string
        maPolicyScript:
          type: string
        txHash:
          type: string
        totalSupply:
          format: int64
          type: integer
      required:
      - fingerprint
      - maName
      - maPolicyId
      - maPolicyScript
      - slotNo
      - totalSupply
      - txHash
      type: object
    StakeInfo:
      example:
        stake: 0
        tickerName: tickerName
        totalStake: 6
        poolHash: poolHash
      properties:
        stake:
          format: int64
          type: integer
        poolHash:
          type: string
        tickerName:
          type: string
        totalStake:
          format: int64
          type: integer
      required:
      - poolHash
      - stake
      - tickerName
      - totalStake
      type: object
    ReturnAddress:
      example:
        address: address
      properties:
        address:
          type: string
      type: object
    StakeAddress:
      example:
        address: address
      properties:
        address:
          type: string
      type: object
    Utxo:
      example:
        owningAddress: owningAddress
        maName: maName
        sourceAddress: sourceAddress
        maPolicyId: maPolicyId
        txHash: txHash
        value: 6
        txIndex: 0
      properties:
        txHash:
          type: string
        txIndex:
          format: int32
          type: integer
        maPolicyId:
          type: string
        maName:
          type: string
        value:
          format: int64
          type: integer
        owningAddress:
          type: string
        sourceAddress:
          type: string
      required:
      - owningAddress
      - sourceAddress
      - txHash
      - txIndex
      - value
      type: object
    TokenListItem:
      example:
        image: image
        maName: maName
        quantity: 1
        maPolicyId: maPolicyId
        name: name
        maMintId: 0
        slotNo: 6
        maFingerprint: maFingerprint
      properties:
        maMintId:
          format: int64
          type: integer
        slotNo:
          format: int64
          type: integer
        maPolicyId:
          type: string
        maName:
          type: string
        maFingerprint:
          type: string
        quantity:
          format: int64
          type: integer
        name:
          type: string
        image:
          type: string
      required:
      - image
      - maFingerprint
      - maName
      - maPolicyId
      - name
      - quantity
      type: object
    AccountStatementRow:
      example:
        operations:
        - operations
        - operations
        in: 5
        change: 2
        withdrawn: 6
        epoch: 0
        sum: 7
        txHash: txHash
        rewards: 1
        timestamp: 2000-01-23T04:56:07.000+00:00
        out: 5
      properties:
        timestamp:
          format: date-time
          type: string
        epoch:
          format: int32
          type: integer
        txHash:
          type: string
        withdrawn:
          format: int64
          type: integer
        rewards:
          format: int64
          type: integer
        out:
          format: int64
          type: integer
        in:
          format: int64
          type: integer
        change:
          format: int64
          type: integer
        sum:
          format: int64
          type: integer
        operations:
          items:
            type: string
          type: array
      required:
      - change
      - epoch
      - in
      - operations
      - out
      - rewards
      - sum
      - timestamp
      - txHash
      - withdrawn
      type: object
    PoolInfo:
      example:
        tickerName: tickerName
        poolHash: poolHash
      properties:
        tickerName:
          type: string
        poolHash:
          type: string
      required:
      - poolHash
      - tickerName
      type: object
    OwnerInfo:
      example:
        amount: 0
        maNames:
        - maNames
        - maNames
        address: address
      properties:
        address:
          type: string
        amount:
          format: int64
          type: integer
        maNames:
          items:
            type: string
          type: array
      required:
      - address
      - amount
      - maNames
      type: object
    LiquidityPool:
      example:
        assetA:
          owningAddress: owningAddress
          maName: maName
          sourceAddress: sourceAddress
          maPolicyId: maPolicyId
          txHash: txHash
          value: 6
          txIndex: 0
        assetB:
          owningAddress: owningAddress
          maName: maName
          sourceAddress: sourceAddress
          maPolicyId: maPolicyId
          txHash: txHash
          value: 6
          txIndex: 0
      properties:
        assetA:
          $ref: '#/components/schemas/Utxo'
        assetB:
          $ref: '#/components/schemas/Utxo'
      type: object
    EpochStake:
      example:
        amount: 0
        stakeAddress: stakeAddress
      properties:
        stakeAddress:
          type: string
        amount:
          format: int64
          type: integer
      required:
      - amount
      - stakeAddress
      type: object

